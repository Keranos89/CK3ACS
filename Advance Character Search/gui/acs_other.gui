template acs_skill_grid_text
{
    parentanchor = center
    margin_bottom = 4
    align = center
}

template acs_skill_grid_background
{
    name = "skill_icon_bg"
    texture = "gfx/interface/window_character/character_view_skills_bg.dds"
    framesize = { 70 26 }
    margin = { 5 0 }
}
### LIST TEMPLATE
types acs_character_list_types {



    type acs_widget_character_list_item_finder = widget {
        datacontext = "[Scope.GetCharacter]"
        size = { 200 94 }

        hbox = {
            layoutpolicy_horizontal = expanding

            vbox = {
                layoutpolicy_vertical = expanding

                portrait_head_small_cached = {}
            }

            hbox = {
                layoutpolicy_horizontal = expanding
                layoutpolicy_vertical = expanding
                margin_top = 5

                vbox = {
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding

                    # Name and age
                    hbox = {
                        layoutpolicy_horizontal = expanding
                        margin = { 0 3 }
                        margin_left = 5
                        margin_right = 10

                        background = {
                            using = Background_Area_Characterlist
                        }

                        background = {
                            using = Background_Area_Dark

                            modify_texture = {
                                texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
                                blend_mode = alphamultiply
                                alpha = 1
                                rotate_uv = -90
                            }
                        }

                        hbox = {
                            margin_left = 3
                            layoutpolicy_horizontal = expanding
                            maximumsize = { 338 -1 }

                            text_single = {
                                using = Font_Size_Medium
                                layoutpolicy_horizontal = expanding
                                align = nobaseline
                                text = "[Character.GetUINameNoTooltip]"
                                autoresize = no
                                fontsize_min = 14
                            }

                            hbox = {
                                visible = "[And(Character.HasRelationTo( GetPlayer ), Not(Character.IsPlayer))]"
                                text_single = {
                                    text = "•"
                                    align = nobaseline
                                    margin = { 5 0 }
                                }

                                text_single = {
                                    name = "character_relation"
                                    text = "[Character.GetRelationToString( GetPlayer )]"
                                    default_format = "#low"
                                    align = nobaseline
                                    fontsize_min = 14
                                    max_width = 180
                                }
                            }

                        }

                        hbox = {
                            size = { 62 0 }
                            margin_right = 5
                            spacing = 2
                    
                            text_single = {
                                text = "[Character.GetAge]"
                                align = nobaseline
                                tooltip = "[Character.GetDeathOrBirthDateInfo]"
                            }
                            icon = {
                                visible = "[Not(Character.IsDeadAndValid)]"
                                size = { 23 23 }
                                framesize = { 60 60 }
                                frame = "[Character.GetHealthIconFrame]"
                                texture = "gfx/interface/icons/character_status/icon_health.dds"
                                tooltip = "[Character.GetHealthInfo]"
                            }
                    
                            icon = {
                                name = "is_dead"
                                visible = "[Character.IsDeadAndValid]"
                                size = { 23 23 }
                
                                texture = "[Character.GetDeathReasonIcon]"
                                tooltip = "CHARACTER_DEAD_TOOLTIP"
                            }
                        }

                        # Skills
                        acs_hbox_skills_grid = {}
                        
                        
                    }

                    ### BOTTOM ROW ###
                    hbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                        
                        vbox = {
                            layoutpolicy_horizontal = expanding

                            hbox = {
                                layoutpolicy_horizontal = expanding

                                # Dynasty
                                widget = {
                                    size = { 45 40 }

                                    coa_house_small = {
                                        datacontext = "[Character.GetHouse]"
                                        parentanchor = center
                                        scale = 0.7
                                    }
                                }

                                # Traits
                                hbox = {
                                    layoutpolicy_vertical = expanding
                                    margin = { 10 0 }
                                    minimumsize = { 140 0 } #### needed for prison view

                                    background = {
                                        using = Background_Area_Dark
                                        alpha = 0.5
                                        margin = { 0 2 }
                                    }

                                    fixedgridbox = { name = "traits_grid"
                                        datamodel = "[Character.GetTraitIndices]"
                                        datamodel_reuse_widgets = yes
                                        flipdirection = yes
                                        layoutpolicy_horizontal = expanding
                                        layoutpolicy_vertical = expanding
                                        addcolumn = 30
                                        addrow = 28

                                        min_width = 210
                                        datamodel_wrap = 7
                                        maxverticalslots = 2

                                        item = {
                                            icon_trait = {
                                                datacontext = "[GetTraitForIndex(uint16.GetUint)]"
                                                visible = "[Trait.IsValid]"

                                                blockoverride "icon_size"
                                                {
                                                    size = { 30 30 }
                                                }

                                                blockoverride "tooltip_placement"
                                                {
                                                    using = tooltip_se
                                                }

                                                blockoverride "glow_radius"
                                                {
                                                    glow_radius = 3
                                                }
                                            }
                                        }
                                    }
                                }

                                expand = {}
                            }
                        }

                        acs_character_buttom_right = {}
                    }
                }
            }
        }
    }
    
    type acs_button_character_search_small = button_icon {
        name = "acs_button"
        tooltip = "FIND_CHARACTER"
        texture = "gfx/interface/icons/flat_icons/character_search.dds"                    
                     
        using = tooltip_ne
        shortcut = "character_finder"

        state = {
            name = "init_mod_variable"
            trigger_on_create = yes
            on_start = "[GetScriptedGui( 'acs_init_global_flag' ).Execute( GuiScope.End )]"
            on_start = "[GetVariableSystem.Set( 'mod_acs_active', 'enable' )]"
        }
        
        onclick = "[ExecuteConsoleCommand( Select_CString( GetVariableSystem.Exists('acs_window_toggle'), 'gui.clearwidgets acs_window', 'gui.createwidget gui/acs.gui acs_window' ) )]"
        onclick = "[GetVariableSystem.Toggle( 'acs_window_toggle' )]"
    }

    type acs_button_character_search = button_standard {
        text = "acs_advance_search"
        onclick = "[ExecuteConsoleCommand( Select_CString( GetVariableSystem.Exists('acs_window_toggle'), 'gui.clearwidgets acs_window', 'gui.createwidget gui/acs.gui acs_window' ) )]"
        onclick = "[GetVariableSystem.Toggle( 'acs_window_toggle' )]"
        onclick = "[GetVariableSystem.Toggle( 'extra_buttons_expand' )]"
        tooltip = "IM_TT_FIND_CHARACTER"
    }

    type acs_button_character_search_vannila = button_standard {
        name = "acs_vanilla_find_character_button"
        text = "acs_vannila_search"
        onclick = "[ToggleGameView( 'character_finder' )]"
        onclick = "[GetVariableSystem.Toggle( 'extra_buttons_expand' )]"
        tooltip = "IM_TT_FIND_CHARACTER"
    }

    type acs_button_encyclopedia = button_standard {
        name = "acs_button_encyclopedia"
        text = "HEADING_ENCYCLOPEDIA"
        onclick = "[ToggleEncyclopedia]"
        onclick = "[GetVariableSystem.Toggle( 'extra_buttons_expand' )]"
        tooltip = "OPEN_ENCYCLOPEDIA"
        shortcut = "encyclopedia"
    }
}