types acs_character_presentation_top {
    type acs_header_pattern = widget {
        background = {
            texture = "gfx/interface/component_tiles/tile_title_big_top_01.dds"
            spriteType = Corneredtiled
            texture_density = 2

            modify_texture = {
                name = "mask"
                texture = "gfx/interface/component_masks/mask_title_big_top.dds"
                spriteType = Corneredtiled
                spriteborder = { 160 0 }
                blend_mode = alphamultiply
                alpha = 0.5
            }

            modify_texture = {
                name = "overlay"
                texture = "gfx/interface/component_overlay/overlay_title_big_top.dds"
                spriteType = Corneredstretched
                spriteborder = { 0 0 }
                blend_mode = overlay
            }
        }
         
        flowcontainer = {
            parentanchor = top|right
            ignoreinvisible = yes
            margin = { 8 8 }
    
            button_icon = {
                texture = "gfx/interface/icons/flat_icons/acs_reload.dds"
                name = "button_reload"
                tooltip = "acs_reload_tooltip"
    
                using = Animation_ShowHide_Standard
                block "reload_visible" {
                    visible = yes
                }
                
                onclick =  "[GetScriptedGui( 'acs_window' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
            }
    
            button_close = {
                name = "button_close"
                
                tooltip = "CLOSE_TOOLTIP"
                clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_close"
    
                using = Animation_ShowHide_Standard
                block "button_close" {
                    shortcut = "close_window"
                    onclick = "[ExecuteConsoleCommand( Select_CString( GetVariableSystem.Exists('acs_window_toggle'), 'gui.clearwidgets acs_window', 'gui.createwidget gui/acs.gui acs_window' ) )]"
                    onclick = "[GetVariableSystem.Toggle( 'acs_window_toggle' )]"
                }

            }
        }

        text_single = {
            name = "header_text"
            parentanchor = top|hcenter
            position = { 0 5 }
            block "header_text" {
                text = "acs_advance_search"
            }

            maximumsize = { 400 -1 }

            using = Font_Type_Flavor
            using = Font_Size_Big
        }
    }
       


    type acs_hbox_skills_grid = hbox {
        name = "acs_skills_grid"
        #size = { 160 25 }
        widget = {
            size = { 32 25 }
            
            text_single = {
                using = acs_skill_grid_text
                text = "[Character.GetSkill( 'diplomacy' )]"
                tooltip = "[diplomacy|E]"
            }

            background = {
                using = acs_skill_grid_background
                frame = 1
            }
        }
        widget = {
            size = { 32 25 }

            text_single = {
                using = acs_skill_grid_text
                text = "[Character.GetSkill( 'martial' )]"
                tooltip = "[martial|E]"
            }

            background = {

                using = acs_skill_grid_background
                frame = 2
            }
        }
        widget = {
            size = { 32 25 }

            text_single = {
                name = "value"
                using = acs_skill_grid_text
                text = "[Character.GetSkill( 'stewardship' )]"
                tooltip = "[stewardship|E]"
            }

            background = {
                using = acs_skill_grid_background
                frame = 3
            }
        }
        widget = {
            size = { 32 25 }

            text_single = {
                name = "value"
                using = acs_skill_grid_text
                text = "[Character.GetSkill( 'intrigue' )]"
                tooltip = "[intrigue|E]"
            }

            background = {

                using = acs_skill_grid_background
                block "bg"
                {
                    frame = 4
                }
            }
        }
        widget = {
            size = { 32 25 }

            text_single = {
                name = "value"
                using = acs_skill_grid_text
                text = "[Character.GetSkill( 'learning' )]"
                tooltip = "[learning|E]"
            }

            background = {

                using = acs_skill_grid_background
                block "bg"
                {
                    frame = 5
                }
            }
        }
        widget = {
            size = { 32 25 }

            text_single = {
                name = "value"
                using = acs_skill_grid_text
                text = "[Character.GetProwess]"
                tooltip = "[Character.GetProwessBreakdown]"
            }
        }
        
        divider = {
            layoutpolicy_vertical = expanding
            size = { 2 3 }
            color = { 0.13 0.55 0.13 1 }
        }
        widget = {
            size = { 42 25 }
            
            text_single = {
                text = "[Character.GetMilitaryStrengthText]"
                default_format = "#High"
                align = center
                parentanchor = center
                fontsize_min = 9.5
                max_width = 42
                tooltip = "[Character.GetMilitaryStrengthTooltip]"
            }
        }    
        divider = {
            layoutpolicy_vertical = expanding
            size = { 2 3 }
            color = { 1 0.13 0.13 1 }
        }
        widget = {
            size = { 42 25 }
            
            text_single = {
                text = "[Character.RealmSize|0]"
                default_format = "#High"
                align = center
                parentanchor = center
                fontsize_min = 9.5
                max_width = 42
            }
        }     
    }
}