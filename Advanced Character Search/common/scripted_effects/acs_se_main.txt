create_searched_character_list = {
    if = {
        limit = {
            NOT = { has_global_variable = is_acs_building_list }
        }
        set_global_variable = is_acs_building_list

        clear_global_variable_list = acs_abrahamic_list
        every_religion_global = {
            limit = { 
                is_in_family = rf_abrahamic 
            }
            add_to_global_variable_list = { name = acs_abrahamic_list target = this }

            every_faith = {
                save_temporary_scope_as = acs_local_to_add_faith
                #prev = {
                #    add_to_variable_list = {
                #        name = acs_all_faiths_list
                #        target = scope:acs_local_to_add_faith
                #    }
                #}
            }
            
        }
        
        if = {
            limit = {
                NOT = { has_global_variable = acs_first_time_setup_v8_1 }
            }
            
            acs_reset_filters_and_sorting = yes
            set_global_variable = acs_first_time_setup_v8_1
        }
        clear_acs_list = yes
        random_player = {
            save_scope_as = acs_filter_diplomatic_range_root
            save_scope_as = acs_filter_hooks_root
            faith = { save_scope_as = acs_filter_faith }
            religion = { save_scope_as = acs_filter_religion }
            save_scope_as = acs_filter_culture_root
            save_scope_as = acs_filter_dynasty_root
            save_scope_as = acs_sort_root
            save_scope_as = acs_invite_to_court
            acs_make_reduced_and_count = yes
            if = {
                limit = { global_var:acs_filter_relation = 0 }
                every_living_character = { acs_add_to_sort_list = yes }
            }
            else_if = {
                limit = { 
                    NOR = { 
                        global_var:acs_filter_relation = 6
                        global_var:acs_filter_relation = 7
                    }
                }
                if = {
                    limit = { 
                        OR = { 
                            global_var:acs_filter_relation = 1
                            global_var:acs_filter_relation = 2
                            global_var:acs_filter_relation = 3
                            global_var:acs_filter_relation = 4
                        }
                    }
                    top_liege = { add_to_temporary_list = acs_to_sort_courts }
                }

                if = {
                    limit = {
                        OR = { 
                            global_var:acs_filter_relation = 1
                            global_var:acs_filter_relation = 8
                            global_var:acs_filter_relation = 12
                        }
                    }
                    top_liege = { #close realms
                        save_temporary_scope_as = top_liege_scope
                        every_neighboring_and_across_water_top_liege_realm_owner = {
                            add_to_temporary_list = acs_to_sort_courts
                            set_variable = { name = acs_distance value = realm_size }
                        }

                        set_local_variable = { name = new_entrie_found value = 1 }
                        while = {
                            limit = { local_var:new_entrie_found = 1 }
                            set_local_variable = { name = new_entrie_found value = 0 }
                            every_in_list = {
                                list = acs_to_sort_courts
                                if = { 
                                    limit = { var:acs_distance < 14 }
                                    every_neighboring_and_across_water_top_liege_realm_owner = {
                                        set_local_variable = { name = distance value = { value = prev.var:acs_distance add = realm_size }  }
                                        if = {
                                            limit = {
                                                trigger_if = {
                                                    limit = { exists = var:acs_distance }
                                                    acs_distance > 0
                                                }
                                                trigger_else = { 
                                                    always = yes
                                                }
                                                NOT = { scope:top_liege_scope = this }
                                            }
                                            add_to_temporary_list = acs_to_sort_courts
                                            set_variable = { name = acs_distance value = local_var:distance }
                                            set_local_variable = { name = new_entrie_found value = 1 }
                                        }  
                                    }
                                }
                            }
                        }
                        every_in_list = {
                            list = acs_to_sort_courts
                            remove_variable = acs_distance
                        }
                    }
                }
                else_if = {
                    limit = {
                        OR = { 
                            global_var:acs_filter_relation = 2
                            global_var:acs_filter_relation = 9
                            global_var:acs_filter_relation = 13
                        }
                    }
                    top_liege = { 
                        every_neighboring_and_across_water_top_liege_realm_owner = {
                            add_to_temporary_list = acs_to_sort_courts
                        }
                    }
                }
                else_if = {
                    limit = {
                        OR = { 
                            global_var:acs_filter_relation = 3
                            global_var:acs_filter_relation = 10
                            global_var:acs_filter_relation = 14
                        }
                    }
                    top_liege = { 
                        every_neighboring_top_liege_realm_owner = {
                            add_to_temporary_list = acs_to_sort_courts
                        }
                    }
                }
                else_if = {
                    limit = {
                        global_var:acs_filter_relation = 11
                    }
                   
                    top_liege = { 
                        every_independent_ruler = {
                            add_to_temporary_list = acs_to_sort_courts
                        }
                    }
                }
                else_if = {
                    limit = { 
                        global_var:acs_filter_relation = 5
                    }
                    add_to_temporary_list = acs_to_sort_courts
                }
                if = {
                    limit = {
                        OR = { 
                            global_var:acs_filter_relation = 1
                            global_var:acs_filter_relation = 2
                            global_var:acs_filter_relation = 3
                            global_var:acs_filter_relation = 4
                            global_var:acs_filter_relation = 5
                            global_var:acs_filter_relation = 8
                            global_var:acs_filter_relation = 9
                            global_var:acs_filter_relation = 10
                        }
                    }
                    every_in_list = {
                        list = acs_to_sort_courts
                        every_vassal_or_below = {
                            acs_add_court_to_list = yes
                        }
                        acs_add_court_to_list = yes
                    }
                }
                else = {
                    every_in_list = {
                        list = acs_to_sort_courts
                        acs_add_court_to_list = yes
                    }
                }
                
            }
            else_if = {
                limit = { global_var:acs_filter_relation = 6 }
                every_vassal = { acs_add_court_to_list = yes }
            }
            else = {
                acs_add_court_to_list = yes
            }
        }
          
        set_global_variable = {  
            name = acs_selected_count 
            value = {
                value = 0
                every_in_list = { list = acs_to_sort add = 1 }
            }  
        } 
        set_global_variable = {
            name = acs_total_number_of_characters
            value = acs_total_number_of_characters
        }

        ordered_in_list = {
            list = acs_to_sort
            order_by = acs_sort_value
            max = global_var:acs_select_count
            check_range_bounds = no
            add_to_global_variable_list = { name = acs_list target = this }
            set_claim_data = yes
        }    
        
        remove_global_variable = is_acs_building_list
    }  
}

acs_add_court_to_list = {
    every_courtier_or_guest = { acs_add_to_sort_list = yes }
    every_prisoner = { acs_add_to_sort_list = yes }
    acs_add_to_sort_list = yes
}

acs_add_to_sort_list = {
    if = { 
        limit = { 
            save_temporary_scope_as = candidate
            any_in_global_list = {
                variable = acs_active_filter_list
                save_temporary_scope_as = tag
                acs_switch_filter = { FILTER = scope:tag CANDIDATE = scope:candidate }
                count = all
            }
        }
        add_to_temporary_list = acs_to_sort
    }
}

clear_acs_list = {
    if = {
        limit = { has_global_variable_list = acs_list }
        every_in_global_list = {
            list = acs_list
            clear_claim_data = yes
        }
        clear_global_variable_list = acs_list
    }
}

set_claim_data = {
    if = {
        limit = {
            NOT = { has_variable = is_acs_building_claim_list }
        }
        
        save_scope_as = target_character
        set_variable = is_acs_building_claim_list
        set_variable = {  name = acs_top_claim_value value = 0  }

        remove_variable = acs_is_top_claim_explicit;
        remove_variable = acs_is_top_claim_pressed;
        remove_variable = acs_best_claim
        clear_saved_scope = acs_top_claim
        clear_saved_scope = acs_top_unpressed_claim
        clear_saved_scope = acs_top_pressed_claim

        ordered_claim = {
            explicit = no
            order_by = claim_value_for_sort
            max = 1
            save_temporary_scope_as = acs_top_claim
            prev = {
                set_variable = {  name = acs_top_claim_value value = scope:acs_top_claim.claim_value_for_sort } 
            }
        }
        set_variable = { name = acs_top_unpressed_claim_value value = 0  }
        ordered_claim = {
            explicit = yes
            pressed = no
            order_by = claim_value_for_sort
            max = 1
            save_temporary_scope_as = acs_top_unpressed_claim
            prev = {
                set_variable = {  name = acs_top_unpressed_claim_value value = scope:acs_top_unpressed_claim.claim_value_for_sort  } 
            }
        }
        set_local_variable = {name  = help value = { value = var:acs_top_unpressed_claim_value subtract = var:acs_top_claim_value }}
        if = {
            limit = {
                AND = {
                    local_var:help >= 0
                    var:acs_top_unpressed_claim_value > 0
                }
            }
            scope:acs_top_unpressed_claim = {
                save_scope_as = acs_top_claim
            }
            
            set_variable = { name = acs_top_claim_value value = var:acs_top_unpressed_claim_value  } 
            set_variable = acs_is_top_claim_explicit
        }
        set_variable = { name = acs_top_pressed_claim_value value = 0  }
        ordered_claim = {
            explicit = yes
            pressed = yes
            order_by = claim_value_for_sort
            max = 1
            save_temporary_scope_as = acs_top_pressed_claim
            prev = {
                set_variable = { name = acs_top_pressed_claim_value value = scope:acs_top_pressed_claim.claim_value_for_sort   } 
            }
        }
        set_local_variable = {name  = help value = { value = var:acs_top_pressed_claim_value subtract = var:acs_top_claim_value }}
        if = {
            limit = {
                AND = {
                    local_var:help >= 0
                    var:acs_top_pressed_claim_value > 0
                }
            }
            scope:acs_top_pressed_claim = {
                save_temporary_scope_as = acs_top_claim
            }
            set_variable = acs_is_top_claim_explicit
            set_variable = acs_is_top_claim_pressed
        }
        
        if = {
            limit = { exists = scope:acs_top_claim }
            set_variable = { name = acs_best_claim value = scope:acs_top_claim  } 
        }

        set_variable = { name = acs_total_claim_county value = total_claim_county_value } 
        set_variable = { name = acs_total_claim_duchy value = total_claim_duchy_value } 
        set_variable = { name = acs_total_claim_kingdom value = total_claim_kingdom_value } 
        set_variable = { name = acs_total_claim_empire value = total_claim_empire_value } 
        
        set_variable = { name = acs_total_heritage_county value = total_heritage_county_value } 
        set_variable = { name = acs_total_heritage_duchy value = total_heritage_duchy_value } 
        set_variable = { name = acs_total_heritage_kingdom value = total_heritage_kingdom_value } 
        set_variable = { name = acs_total_heritage_empire value = total_heritage_empire_value } 
        set_variable = { name = acs_total_heritage_barony value = total_heritage_barony_value } 
        
        remove_variable = acs_top_claim_value
        remove_variable = acs_top_unpressed_claim_value
        remove_variable = acs_top_pressed_claim_value

        clear_variable_list = acs_implicit_claim_list
        every_claim = {
            explicit = no
            save_scope_as = to_add
            scope:target_character = {
                add_to_variable_list = {
                    name = acs_implicit_claim_list
                    target = scope:to_add
                }
            }
        }
        clear_variable_list = acs_unpressed_claim_list
        every_claim = {
            explicit = yes
            pressed = no
            save_scope_as = to_add
            scope:target_character = {
                add_to_variable_list = {
                    name = acs_unpressed_claim_list
                    target = prev
                }
            }
        }
        clear_variable_list = acs_pressed_claim_list
        every_claim = {
            explicit = yes
            pressed = yes
            scope:target_character = {
                add_to_variable_list = {
                    name = acs_pressed_claim_list
                    target = prev
                }
            }
        }
        remove_variable = acs_best_heritage
        clear_variable_list = acs_heir_to_title_list
        ordered_heir_to_title = {
            order_by = tier
            max = 20
            check_range_bounds = no
            if = {
                limit = { 
                    scope:target_character = {
                        NOT = { has_variable = acs_best_heritage }
                    }
                    
                }
                scope:target_character = {
                    set_variable = { name = acs_best_heritage value = prev }
                }
            }
            scope:target_character = {
                add_to_variable_list = {
                    name = acs_heir_to_title_list
                    target = prev
                }
            }
        }

        clear_variable_list = acs_2nd_to_title_list
        ordered_pretender_title = {
            order_by = tier
            max = 20
            check_range_bounds = no
            if = {
                limit = {
                    place_in_line_of_succession = {
                        target = scope:target_character
                        value == 2
                    }
                }
                if = {
                    limit = { 
                        scope:target_character = {
                            NOT = { has_variable = acs_best_heritage }
                        }   
                    }
                    scope:target_character = {
                        set_variable = { name = acs_best_heritage value = prev }
                    }
                }
                scope:target_character = {
                    add_to_variable_list = {
                        name = acs_2nd_to_title_list
                        target = prev
                    }
                }
            }  
        }

        clear_variable_list = acs_3rd_to_title_list
        ordered_pretender_title = {
            order_by = tier
            max = 20
            check_range_bounds = no
            if = {
                limit = {
                    place_in_line_of_succession = {
                        target = scope:target_character
                        value == 3
                    }
                }
                if = {
                    limit = { 
                        scope:target_character = {
                            NOT = { has_variable = acs_best_heritage }
                        }   
                    }
                    scope:target_character = {
                        set_variable = { name = acs_best_heritage value = prev }
                    }
                }
                scope:target_character = {
                    add_to_variable_list = {
                        name = acs_3rd_to_title_list
                        target = prev
                    }
                }
            }  
        }

        clear_variable_list = acs_4th_to_title_list
        ordered_pretender_title = {
            order_by = tier
            max = 20
            check_range_bounds = no
            if = {
                limit = {
                    place_in_line_of_succession = {
                        target = scope:target_character
                        value == 4
                    }
                }
                if = {
                    limit = { 
                        scope:target_character = {
                            NOT = { has_variable = acs_best_heritage }
                        }   
                    }
                    scope:target_character = {
                        set_variable = { name = acs_best_heritage value = prev }
                    }
                }
                scope:target_character = {
                    add_to_variable_list = {
                        name = acs_4th_to_title_list
                        target = prev
                    }
                }
            }  
        }

        clear_variable_list = acs_other_heritage_list
        ordered_pretender_title = {
            order_by = tier
            max = 20
            check_range_bounds = no
            if = {
                limit = {
                    place_in_line_of_succession = {
                        target = scope:target_character
                        value > 4
                    }
                }
                if = {
                    limit = { 
                        scope:target_character = {
                            NOT = { has_variable = acs_best_heritage }
                        }   
                    }
                    scope:target_character = {
                        set_variable = { name = acs_best_heritage value = prev }
                    }
                }
                scope:target_character = {
                    add_to_variable_list = {
                        name = acs_other_heritage_list
                        target = prev
                    }
                }
            }  
        }

        remove_variable = is_acs_building_claim_list
    } 
}
clear_claim_data = {
    remove_variable = acs_best_claim
    remove_variable = acs_total_claim_county
    remove_variable = acs_total_claim_duchy
    remove_variable = acs_total_claim_kingdom
    remove_variable = acs_total_claim_empire

    remove_variable = acs_total_heritage_county
    remove_variable = acs_total_heritage_duchy
    remove_variable = acs_total_heritage_kingdom
    remove_variable = acs_total_heritage_empire
    remove_variable = acs_total_heritage_barony
    
    clear_variable_list = acs_implicit_claim_list
    clear_variable_list = acs_unpressed_claim_list
    clear_variable_list = acs_pressed_claim_list
    remove_variable = acs_is_top_claim_explicit
    remove_variable = acs_is_top_claim_pressed
    remove_variable = acs_best_heritage
    clear_variable_list = acs_heir_to_title_list
    clear_variable_list = acs_2nd_to_title_list
    clear_variable_list = acs_3rd_to_title_list
    clear_variable_list = acs_4th_to_title_list
    clear_variable_list = acs_other_heritage_list
}

acs_change_sort_order = {
    if = {
        limit = { has_global_variable = acs_sort_by_ascending }
        remove_global_variable = acs_sort_by_ascending
    }
    else = {
        set_global_variable = acs_sort_by_ascending
    }
}

acs_auto_apply_sorting_and_filters = {
    if = {
        limit = { has_global_variable = acs_auto_apply_sorting_and_filters }
        create_searched_character_list = yes
    }
}

acs_simple_checkbox = {
    acs_save_undo_0_filters = yes
    set_local_variable = { name = acs_positive value = $START$ }
    set_local_variable = { name = acs_negative value = { value = local_var:acs_positive add = 1 } }
    if = {
        limit = {
            NOT = {
                any_in_global_list = {
                    variable = $LIST$
                    OR = {
                        this = local_var:acs_positive
                        this = local_var:acs_negative
                    }
                } 
            } 
        }
        add_to_global_variable_list = { name = $LIST$ target = local_var:acs_positive }
    }
    else = {
        if = { limit = { any_in_global_list = { variable = $LIST$ this = local_var:acs_positive } }
            remove_list_global_variable = { name = $LIST$ target = local_var:acs_positive }
            add_to_global_variable_list = { name = $LIST$ target = local_var:acs_negative }
        }
        else = {
            remove_list_global_variable = { name = $LIST$ target = local_var:acs_negative }
        }
    }
}
