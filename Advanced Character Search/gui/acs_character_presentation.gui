types acs_character_presentation_types {

    type acs_character_presentation = widget {
        datacontext = "[Scope.GetCharacter]"
        size = { 885 94 }

        portrait_head_small_cached = {
            #size = { 85 90 }
        }

        widget = {
            position = { 85 0 }
            size = { 800 94 }

            # Name and age
            acs_character_header = {}

            ### BOTTOM ROW ###
            widget = {

                position = { 0 34 }
                size = { 800 60 }
                # Dynasty
                widget = {
                    size = { 45 40 }
                    parentanchor = vcenter|left
                    widgetanchor = vcenter|left
                    coa_house_small = {
                        datacontext = "[Character.GetHouse]"
                        parentanchor = center
                        scale = 0.7
                    }
                }
                acs_character_presentation_traits = {
                    position = { 50 0 }
                }
                

                acs_military = {
                    position = { 260 0 }
                }
                acs_character_buttom_right = {
                    parentanchor = top|right
                    widgetanchor = top|right
                }
            }
        }
    }

    type acs_military  = widget  {
        
        size = { 150 60 }
        tooltip = "acs_military_tooltip"
        visible = "[Character.HasLandedTitles]"
        vbox = {
            spacing = 3
            margin_left = 10
            margin_bottom = 3
            widget = {
                size = { 140 30 }
                flowcontainer = {
                    margin = { 0 0 }
                    spacing = 5

                    icon = {
                        name = "icon_soldier"
                        texture = "gfx/interface/icons/icon_soldier.dds"
                        size = { 25 25 }
                    }
                    widget = {
                        size = { 95 30 }
                        text_single = {
                            parentanchor = top|right
                            widgetanchor = top|right
                            text = "[Character.GetMilitaryStrengthText]/[Character.GetMaxMilitaryStrength|0]"
                            default_format = "#high"
                            position = { -10 -2 }
                        }
                        progressbar_standard = {
                            parentanchor = bottom|left
                            widgetanchor = bottom|left
                            name = "soldiers_max"
                            size = { 95 10 }

                            min = 0
                            max = 100
                            value = "[Character.GetMilitaryStrengthPercentGUI]"
                        }
                    }
                }   
            }
            widget = {
                size = { 140 30 }
                icon = {
                    parentanchor = top|left
                    widgetanchor = top|left
                    name = "icon_soldier"
                    texture = "gfx/interface/icons/portraits/knight.dds"
                    size = { 25 25 }
                }
                
                widget = {
                    size = { 90 25 }
                    parentanchor = top|left
                    widgetanchor = top|left
                    position = { 40 0 }
                    flowcontainer = {
                        text_single = {
                            text = "[Character.GetKnightCount|V]/[GetKnightLimit( Character.Self )|V]"
                            default_format = "#high"
                        }
                        text_single = {
                            text = "[Subtract_CFixedPoint(Character.GetKnightEffectiveness, '(CFixedPoint)1')|0%=+]"
                            default_format = "#high"
                            visible = "[GreaterThan_CFixedPoint(Subtract_CFixedPoint(Character.GetKnightEffectiveness, '(CFixedPoint)1'), '(CFixedPoint)0')]"
                            parentanchor = top|left
                            widgetanchor = top|left
                            fontsize = 10
                            fontsize_min = 9.99
                        }
                    }
                }
                
            }
            
        }
    }

    type acs_character_presentation_traits = widget {
        
        layoutpolicy_vertical = expanding
        size = { 210 60 }

        background = {
            using = Background_Area_Dark
            alpha = 0.4
            margin = { 0 2 }
        }

        fixedgridbox = { name = "traits_grid"
            datamodel = "[Character.GetTraitIndices]"
            datamodel_reuse_widgets = yes
            flipdirection = yes
            layoutpolicy_horizontal = expanding
            layoutpolicy_vertical = expanding
            addcolumn = 30
            addrow = 28

            min_width = 210
            datamodel_wrap = 7
            maxverticalslots = 2

            parentanchor = vcenter
            widgetanchor = vcenter

            item = {
                icon_trait = {
                    datacontext = "[GetTraitForIndex(int32.GetInt)]"
                    visible = "[Trait.IsValid]"

                    blockoverride "icon_size"
                    {
                        size = { 30 30 }
                    }

                    blockoverride "tooltip_placement"
                    {
                        using = tooltip_se
                    }

                    blockoverride "glow_radius"
                    {
                        glow_radius = 3
                    }
                }
            }
        }
    }
    
}